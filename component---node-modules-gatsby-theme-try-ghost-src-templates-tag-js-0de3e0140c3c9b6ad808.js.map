{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-try-ghost/src/templates/tag.js"],"names":["Tag","data","location","pageContext","tag","ghostTag","posts","allGhostPost","edges","Consumer","g","Fragment","type","render","overlay","tags","header","numberOfPosts","totalPosts","globalState","pageQuery"],"mappings":"4FAAA,0HA6CeA,UA7BH,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACrBC,EAAMH,EAAKI,SACXC,EAAQL,EAAKM,aAAaC,MAEhC,OACI,kBAAC,IAAmBC,SAApB,MAA+B,SAAAC,GAAC,OAC5B,kBAAC,IAAMC,SAAP,KACI,kBAAC,IAAD,CAAUV,KAAMA,EAAMC,SAAUA,EAAUU,KAAK,WAC/C,kBAAC,IAAD,CAAkBC,OAAS,SAAAC,GAAO,OAC9B,kBAAC,IAAD,CAAQC,KAAM,CAACX,GAAMU,QAASA,EAC1BE,OAAQ,kBAAC,IAAD,CAAWF,QAASA,EAASV,IAAKA,EAAKa,cAAed,EAAYe,cAC1E,kBAAC,IAAD,CAAUC,YAAaT,EAAGP,YAAaA,EAAaG,MAAOA,aAoB5E,IAAMc,EAAS","file":"component---node-modules-gatsby-theme-try-ghost-src-templates-tag-js-0de3e0140c3c9b6ad808.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { HeaderTag, Layout, PostView } from '../components/common'\nimport { OverlayContainer } from '../components/common/effects'\nimport { MetaData } from '../components/common/meta'\n\nimport { GlobalStateContext } from \"../context/GlobalState\"\n\n/**\n* Tag page (/tag/:slug)\n*\n* Loads all posts for the requested tag incl. pagination.\n*\n*/\nconst Tag = ({ data, location, pageContext }) => {\n    const tag = data.ghostTag\n    const posts = data.allGhostPost.edges\n\n    return (\n        <GlobalStateContext.Consumer>{ g => (\n            <React.Fragment>\n                <MetaData data={data} location={location} type=\"series\"/>\n                <OverlayContainer render={ overlay => (\n                    <Layout tags={[tag]} overlay={overlay}\n                        header={<HeaderTag overlay={overlay} tag={tag} numberOfPosts={pageContext.totalPosts} />}>\n                        <PostView globalState={g} pageContext={pageContext} posts={posts} />\n                    </Layout>\n                )}/>\n            </React.Fragment>\n        )}\n        </GlobalStateContext.Consumer>\n    )\n}\n\nTag.propTypes = {\n    data: PropTypes.shape({\n        ghostTag: PropTypes.object.isRequired,\n        allGhostPost: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.object.isRequired,\n    pageContext: PropTypes.object.isRequired,\n}\n\nexport default Tag\n\nexport const pageQuery = graphql`\n    query GhostTagQuery($postIds: [String!]!, $slug: String!, $limit: Int!, $skip: Int!) {\n        ghostTag(slug: { eq: $slug }) {\n            ...GhostTagFields\n        }\n        allGhostPost(\n            filter: {id: { in: $postIds }, tags: {elemMatch: {slug: {eq: $slug}}}},\n            limit: $limit,\n            skip: $skip,\n            sort: { fields: [featured, published_at], order: [DESC, DESC] }\n        ) {\n            edges {\n                node {\n                ...GhostPostFields\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}